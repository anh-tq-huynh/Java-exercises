Last login: Mon Jun  9 15:07:28 on console
(base) anhhuynh@MacBookAir ~ % jshell
|  Welcome to JShell -- Version 21.0.7
|  For an introduction type: /help intro

jshell> int myFristNumber = (10+5) + 2*10
myFristNumber ==> 35

jshell> System.print.out(myFristNumber)
|  Error:
|  cannot find symbol
|    symbol:   variable print
|  System.print.out(myFristNumber)
|  ^----------^

jshell> int myFirstNumber = (10+5) + 2*10
myFirstNumber ==> 35

jshell> /list

   1 : int myFristNumber = (10+5) + 2*10;
   2 : int myFirstNumber = (10+5) + 2*10;

jshell> help
|  Error:
|  cannot find symbol
|    symbol:   variable help
|  help
|  ^--^

jshell> /help
|  Type a Java language expression, statement, or declaration.
|  Or type one of the following commands:
|  /list [<name or id>|-all|-start]
|  	list the source you have typed
|  /edit <name or id>
|  	edit a source entry
|  /drop <name or id>
|  	delete a source entry
|  /save [-all|-history|-start] <file>
|  	Save snippet source to a file
|  /open <file>
|  	open a file as source input
|  /vars [<name or id>|-all|-start]
|  	list the declared variables and their values
|  /methods [<name or id>|-all|-start]
|  	list the declared methods and their signatures
|  /types [<name or id>|-all|-start]
|  	list the type declarations
|  /imports 
|  	list the imported items
|  /exit [<integer-expression-snippet>]
|  	exit the jshell tool
|  /env [-class-path <path>] [-module-path <path>] [-add-modules <modules>] ...
|  	view or change the evaluation context
|  /reset [-class-path <path>] [-module-path <path>] [-add-modules <modules>]...
|  	reset the jshell tool
|  /reload [-restore] [-quiet] [-class-path <path>] [-module-path <path>]...
|  	reset and replay relevant history -- current or previous (-restore)
|  /history [-all]
|  	history of what you have typed
|  /help [<command>|<subject>]
|  	get information about using the jshell tool
|  /set editor|start|feedback|mode|prompt|truncation|format ...
|  	set configuration information
|  /? [<command>|<subject>]
|  	get information about using the jshell tool
|  /! 
|  	rerun last snippet -- see /help rerun
|  /<id> 
|  	rerun snippets by ID or ID range -- see /help rerun
|  /-<n> 
|  	rerun n-th previous snippet -- see /help rerun
|  
|  For more information type '/help' followed by the name of a
|  command or a subject.
|  For example '/help /list' or '/help intro'.
|  
|  Subjects:
|  
|  intro
|  	an introduction to the jshell tool
|  keys
|  	a description of readline-like input editing
|  id
|  	a description of snippet IDs and how use them
|  shortcuts
|  	a description of keystrokes for snippet and command completion,
|  	information access, and automatic code generation
|  context
|  	a description of the evaluation context options for /env /reload and /reset
|  rerun
|  	a description of ways to re-evaluate previously entered snippets

jshell> /?
|  Type a Java language expression, statement, or declaration.
|  Or type one of the following commands:
|  /list [<name or id>|-all|-start]
|  	list the source you have typed
|  /edit <name or id>
|  	edit a source entry
|  /drop <name or id>
|  	delete a source entry
|  /save [-all|-history|-start] <file>
|  	Save snippet source to a file
|  /open <file>
|  	open a file as source input
|  /vars [<name or id>|-all|-start]
|  	list the declared variables and their values
|  /methods [<name or id>|-all|-start]
|  	list the declared methods and their signatures
|  /types [<name or id>|-all|-start]
|  	list the type declarations
|  /imports 
|  	list the imported items
|  /exit [<integer-expression-snippet>]
|  	exit the jshell tool
|  /env [-class-path <path>] [-module-path <path>] [-add-modules <modules>] ...
|  	view or change the evaluation context
|  /reset [-class-path <path>] [-module-path <path>] [-add-modules <modules>]...
|  	reset the jshell tool
|  /reload [-restore] [-quiet] [-class-path <path>] [-module-path <path>]...
|  	reset and replay relevant history -- current or previous (-restore)
|  /history [-all]
|  	history of what you have typed
|  /help [<command>|<subject>]
|  	get information about using the jshell tool
|  /set editor|start|feedback|mode|prompt|truncation|format ...
|  	set configuration information
|  /? [<command>|<subject>]
|  	get information about using the jshell tool
|  /! 
|  	rerun last snippet -- see /help rerun
|  /<id> 
|  	rerun snippets by ID or ID range -- see /help rerun
|  /-<n> 
|  	rerun n-th previous snippet -- see /help rerun
|  
|  For more information type '/help' followed by the name of a
|  command or a subject.
|  For example '/help /list' or '/help intro'.
|  
|  Subjects:
|  
|  intro
|  	an introduction to the jshell tool
|  keys
|  	a description of readline-like input editing
|  id
|  	a description of snippet IDs and how use them
|  shortcuts
|  	a description of keystrokes for snippet and command completion,
|  	information access, and automatic code generation
|  context
|  	a description of the evaluation context options for /env /reload and /reset
|  rerun
|  	a description of ways to re-evaluate previously entered snippets

jshell> System.out.print(myFirstNumber)
35
jshell> int mySeconeNumber = 12
mySeconeNumber ==> 12

jshell> int myThirdNumber = 6
myThirdNumber ==> 6

jshell> /var
|    int myFristNumber = 35
|    int myFirstNumber = 35
|    int mySeconeNumber = 12
|    int myThirdNumber = 6

jshell> int myTotal = myFirstNumber + mySecondNumber + myThirdNumber;
|  Error:
|  cannot find symbol
|    symbol:   variable mySecondNumber
|  int myTotal = myFirstNumber + mySecondNumber + myThirdNumber;
|                                ^------------^

jshell> int myTotal = myFirstNumber + mySeconeNumber + myThirdNumber;
myTotal ==> 53

jshell> /methods

jshell> int myTestTotal = sum(myFirstNumber,mySecondNumber)
|  Error:
|  cannot find symbol
|    symbol:   variable mySecondNumber
|  int myTestTotal = sum(myFirstNumber,mySecondNumber);
|                                      ^------------^

jshell> int myTestTotal = sum(myFirstNumber,mySeconeNumber)
|  Error:
|  cannot find symbol
|    symbol:   method sum(int,int)
|  int myTestTotal = sum(myFirstNumber,mySeconeNumber);
|                    ^-^

jshell> myThirdNumber = myFirstNumber * 2
myThirdNumber ==> 70

jshell> System.out.print(myTotal)
53
jshell>  myTotal = myFirstNumber + mySeconeNumber + myThirdNumber;
myTotal ==> 117

jshell> int myLastOne = 1000 - myTotal
myLastOne ==> 883

jshell> System.out.print(myLastOne);
883
jshell> in myMinIntValue = Integer.MIN_VALUE;
|  Error:
|  cannot find symbol
|    symbol:   class in
|  in myMinIntValue = Integer.MIN_VALUE;
|  ^^

jshell> int myMinIntValue = Integer.MIN_VALUE;
myMinIntValue ==> -2147483648

jshell> int myMaxInt = Integer.MAX_VALUE;
myMaxInt ==> 2147483647

jshell> long myLongMax = Long.MIN_VALUE;
myLongMax ==> -9223372036854775808

jshell> System.out.print("Integer Minimum: ", Integer.MIN_VALUE);
|  Error:
|  no suitable method found for print(java.lang.String,int)
|      method java.io.PrintStream.print(boolean) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.print(char) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.print(int) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.print(long) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.print(float) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.print(double) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.print(char[]) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.print(java.lang.String) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.print(java.lang.Object) is not applicable
|        (actual and formal argument lists differ in length)
|  System.out.print("Integer Minimum: ", Integer.MIN_VALUE);
|  ^--------------^

jshell> System.out.print("Integer Minimum: "+ myMinIntValue);
Integer Minimum: -2147483648
jshell> System.out.print("Integer range: (" + myMaxInt + "-" + myMinIntValue + ")"
   ...> );
Integer range: (2147483647--2147483648)
jshell> System.out.print("Integer range: (" + myMaxInt + "to" + myMinIntValue + ")"
   ...> );
Integer range: (2147483647to-2147483648)
jshell> System.out.print("Integer range: (" + myMaxInt + " to" + myMinIntValue + ")"
   ...> );
Integer range: (2147483647 to-2147483648)
jshell> System.out.print("Integer range: (" + myMaxInt + " to " + myMinIntValue + ")"
   ...> );
Integer range: (2147483647 to -2147483648)
jshell> System.out.print("Integer range: (" + myMinIntValue + " to " + myMaxInt + ")"
   ...> );
Integer range: (-2147483648 to 2147483647)
jshell> System.out.print("Busted Max Value = " + (myMaxInt +1));
Busted Max Value = -2147483648
jshell> int bustedMax = Integer.MAX_VALUE + 1;
bustedMax ==> -2147483648

jshell> bustedMax = 2147483648;
|  Error:
|  integer number too large
|  bustedMax = 2147483648;
|              ^

jshell> 
